#!/bin/bash
#This script will take ATAC-seq Peaks in B, CD4, CD8, Lsk, and NK cells and take the union of all peaks (unionbedg) into one combined file
#That file is then split back into separate B, CD4, CD8, Lsk, and NK files using an R script
#The purpose of this is to expand the ATAC-seq peaks in each cell to encompass the ATAC-seq peaks of all the other cells combined
#The tag coverage is then generated for each ATAC-seq peak for each cell and then an R script is used to generate unique ATAC-seq peaks
#The tags are normalized by an R script, and the unique ATAC seq peaks and a heatmap are generated by another R script

#---------------------CREATE TEMP BED FILE------------------------------------------------
##This generates a temp bed file for unionbedg function later
#This temp file contains the ATAQ-seq peaks called by MACS (CHR, Start, End, and Value)
mkdir -p $dir0/Analysis/ATAC_seq/Union

cd $datadir/ATAC_seq/macs
for i in `ls {B*peaks.bedgraph,CD4*peaks.bedgraph,CD8*peaks.bedgraph,Lsk*peaks.bedgraph,NK*peaks.bedgraph}`;
do
  filename=`echo "$i" | cut -d'.' -f1`		 ##Generates filename variable
  cp $i ${dir0}/Analysis/ATAC_seq 		##Copies to temp file
done

#---------------------UNION FILE----------------------------------------------------------
#Creating combined peak file using files generated above using bedtools unionbedg
#--------------------OPTIONS--------------------------------------------------------------
cd ${dir0}/Analysis/ATAC_seq/
for i in `ls {B*peaks.bedgraph,CD4*peaks.bedgraph,CD8*peaks.bedgraph,Lsk*peaks.bedgraph,NK*peaks.bedgraph}`;
do
  filename=`echo "$i" | cut -d'.' -f1`		 ##Generates filename variable
  chmod ug+w $i
  mv $i ${filename}_temp.bed 		##Copies to temp file
done
filename=`ls *_temp.bed  | cut -d'_' -f1 | paste -sd "_" -` 	##Generates combined filename variable
bedtools unionbedg -i `ls *_temp.bed` | sort -k1,1 -k2,2n | bedtools merge -i stdin -c 4,5,6,7,8 -o sum,sum,sum,sum,sum > ${filename}_merged_common.bed	##Combines the peak files together and merges bookended peaks and adds the tags for merged peaks to a total sum	

if [ ! -e ${dir0}/Analysis/ATAC_seq/B_union_split.bed ]; then
  Rscript --verbose ${r_dir}/ATAC_Peaks_Union_Splitter.R $dir0
fi	
rm *_temp.bed		##Removes temporary bed files
#------------------BEDTOOLS COVERAGE------------------------------------------------------
#-------Sorting Union BED Files to BAM File Order and generated parallel commands---------
rm -f $paralleldir/ATAC_coverage_parallel.txt
for i in `ls *union_split.bed`; 
  do
    filename=`echo "$i" | rev | cut -d'/' -f1 | rev | cut -d'.' -f1 | cut -d'_' -f1`
    sed -e 's/chr1	/chr1A	/' $i | sort -k1,1 -k2,2n | sed -e 's/chr1A/chr1/' > ${filename}_union_split_sorted.bed
    datafile=`find /mnt/data1/VahediLab/PTF_Team/Data/ATAC_seq/bam | grep "$filename" | grep -v "bai"`	
    echo "${dir0}/Analysis/ATAC_seq/${filename}_bam_count.bedgraph ${dir0}/Analysis/ATAC_seq/${filename}_union_split_sorted.bed ${datafile}"	
  done >> $paralleldir/ATAC_coverage_parallel.txt	
#if [ ! -e ${dir0}/Analysis/ATAC_seq/B_bam_count.bedgraph ]; then
parallel --xapply --dryrun --colsep ' ' -a $paralleldir/ATAC_coverage_parallel.txt "bedtools coverage -sorted -g $infodir/mm10.genome -counts -a {2} -b {3} > {1}"	
#parallel --xapply --colsep ' ' -a $paralleldir/ATAC_coverage_parallel.txt "bedtools coverage -sorted -g $infodir/mm10.genome -counts -a {2} -b {3} > {1}"
#fi
for i in `ls *_bam_count.bedgraph`; 
  do
    filename=`echo "$i" | cut -d'.' -f1`
    awk 'BEGIN{OFS="\t"} {print $1,$2,$3,$5}' ${i} > ${filename}_cond.bedgraph	##Removes the old tag counts, keeping only the new tag counts
  done
filename="$(ls *bam_count.bedgraph | cut -d'_' -f1 | paste -sd "_" -)"	##Stores a combined filename
bedtools unionbedg -i `ls *bam_count_cond.bedgraph` | sort -k1,1 -k2,2n | bedtools merge -i stdin -c 4,5,6,7,8 -o sum,sum,sum,sum,sum > ${filename}_bam_count_all.bedgraph

#---------------------R Script that gives ATAC UNIQUE PEAKS and converting to BEDGRAPH----
Rscript --verbose ${r_dir}/Normalize_ATAC_Peaks.R $dir0	
Rscript --verbose ${r_dir}/Heatmap1.R $dir0	